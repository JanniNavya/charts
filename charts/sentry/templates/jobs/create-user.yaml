apiVersion: batch/v1
kind: Job
metadata:
  name: {{ template "sentry.fullname" . }}-create-user
  labels:
    app: {{ template "sentry.name" . }}-create-user
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
  annotations:
    helm.sh/hook: post-install
    helm.sh/hook-weight: '4'
    helm.sh/hook-delete-policy: 'hook-succeeded,before-hook-creation'
spec:
  template:
    metadata:
      labels:
        app: {{ template "sentry.name" . }}-create-user
        release: {{ .Release.Name }}
    spec:
      restartPolicy: Never
      containers:
        - name: {{ template "sentry.fullname" . }}-create-user
          image: {{ .Values.images.sentry.repository }}:{{ .Values.images.sentry.tag }}
          imagePullPolicy: {{ .Values.config.imagePullPolicy }}
          command:
            - sentry
            - createuser
            - --noinput
            - --email
            - {{ .Values.config.sentry.email | quote }}
            - --superuser
            - --password
            - {{ .Values.config.sentry.password | quote }}
          volumeMounts:
            - name: data
              mountPath: /_data
            - name: data
              mountPath: /var/lib/sentry/files
              subPath: data
          env:
            - name: SENTRY_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ template "sentry.fullname" . }}
                  key: sentry_secret
            - name: SENTRY_DB_NAME
              valueFrom:
                configMapKeyRef:
                  name: {{ template "sentry.fullname" . }}
                  key: postgres_database
            {{- if .Values.config.postgres.internal }}
            - name: SENTRY_DB_USER
              valueFrom:
                secretKeyRef:
                  name: {{ template "sentry.sharedname" . }}-postgres-auth
                  key: POSTGRES_USER
            {{- else }}
            - name: SENTRY_DB_USER
              valueFrom:
                configMapKeyRef:
                  name: {{ template "sentry.fullname" . }}
                  key: postgres_username
            {{- end }}
            - name: SENTRY_POSTGRES_HOST
              valueFrom:
                configMapKeyRef:
                  name: {{ template "sentry.fullname" . }}
                  key: postgres_host
            - name: SENTRY_REDIS_HOST
              valueFrom:
                configMapKeyRef:
                  name: {{ template "sentry.fullname" . }}
                  key: redis_host
            {{- if .Values.config.postgres.internal }}
            - name: SENTRY_DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ template "sentry.sharedname" . }}-postgres-auth
                  key: POSTGRES_PASSWORD
            {{- else }}
            - name: SENTRY_DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ template "sentry.fullname" . }}
                  key: postgres_password
            {{- end }}
      volumes:
        - name: data
          {{- if .Values.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.existingClaim | default (include "sentry.fullname" . ) }}
          {{- else }}
          emptyDir: {}
          {{- end }}
