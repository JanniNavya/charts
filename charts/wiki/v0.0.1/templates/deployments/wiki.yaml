apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: {{ template "wiki.fullname" . }}-wiki
  labels:
    app: {{ template "wiki.name" . }}-wiki
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  strategy:
    type: {{ .Values.config.updateStrategy }}
  template:
    metadata:
      labels:
        app: {{ template "wiki.name" . }}-wiki
        release: {{ .Release.Name }}
    spec:
      containers:
        - name: {{ template "wiki.fullname" . }}-wiki
          image: {{ .Values.images.wiki.repository }}:{{ .Values.images.wiki.tag }}
          imagePullPolicy: {{ .Values.config.imagePullPolicy }}
          ports:
            - name: container
              containerPort: 8080:3000
          env: 
            - name: DB_TYPE
              valueFrom:
                configMapKeyRef:
                  name: {{ template "wiki.fullname" . }}
                  key: db_type
            - name: DB_HOST
              valueFrom:
                configMapKeyRef:
                  name: {{ template "wiki.fullname" . }}
                  key: postgres_host
            - name: DB_PORT
              valueFrom:
                configMapKeyRef:
                  name: {{ template "wiki.fullname" . }}
                  key: postgres_port
            {{- if .Values.config.postgres.internal }}
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: {{ template "wiki.sharedname" . }}-postgres-auth
                  key: POSTGRES_USER
            {{- else }}
            - name: DB_USER
              valueFrom:
                configMapKeyRef:
                  name: {{ template "wiki.fullname" . }}
                  key: postgres_username
            {{- end }}
            {{- if .Values.config.postgres.internal }}
            - name: DB_PASS
              valueFrom:
                secretKeyRef:
                  name: {{ template "wiki.sharedname" . }}-postgres-auth
                  key: POSTGRES_PASSWORD
            {{- else }}
            - name: DB_PASS
              valueFrom:
                secretKeyRef:
                  name: {{ template "wiki.fullname" . }}
                  key: postgres_password
            {{- end }}
           - name: DB_NAME
                 valueFrom:
                   configMapKeyRef:
                     name: {{ template "wiki.fullname" . }}
                     key: postgres_database
          livenessProbe:
            httpGet:
              path: /
              port: container
{{ toYaml .Values.probes.liveness | indent 12 }}
          readinessProbe:
            httpGet:
              path: /
              port: container
{{ toYaml .Values.probes.readiness | indent 12 }}
