images:
  mailserver:
    repository: tvial/docker-mailserver
    tag: release-v6.2.1

config:
  imagePullPolicy: IfNotPresent
  updateStrategy: RollingUpdate
  spoofProtection: true
  enableSrs: true
  defaultRelayHost: ''
  clamav:
    enabled: false
  fail2ban:
    enabled: false
  fetchmail:
    enabled: false
  postgrey:
    enabled: false
  spamassassin:
    enabled: false
  mailserver:
    baseUrl: ''
    hostname: ''
  dovecot:
    passAttrs: ''
  dovecot:
    passFilter: ''
  dovecot:
    tls: ''
  dovecot:
    userAttrs: ''
  dovecot:
    userFilter: ''
  enableManagesieve: ''
  fail2ban:
    enabled: false
  fetchmail:
    enabled: false
  fetchmail:
    poll: ''
  ldapBindDn: ''
  ldapBindPw: ''
  ldap:
    enabled: false
  ldap:
    queryFilterAlias: ''
  ldap:
    queryFilterDomain: ''
  ldap:
    queryFilterGroup: ''
  ldap:
    queryFilterUser: ''
  ldap:
    searchBase: ''
  ldap:
    serverHost: ''
  ldap:
    startTls: ''
  postfixMailboxSizeLimit: ''
  postfixMessageSizeLimit: ''
  postgrey: 
    autoWhitelistClients: ''
  postgrey: 
    delay: ''
  postgrey: 
    enabled: false
  postgrey: 
    maxAge: ''
  postgrey: 
    text: ''
  postmasterAddress: ''
  saslPasswd: ''
  saslauthd: 
    enabled: false
  saslauthd: 
    ldapBindDn: ''
  saslauthd: 
    ldapFilter: ''
  saslauthd: 
    ldapPassword: ''
  saslauthd: 
    ldapSearchBase: ''
  saslauthd: 
    ldapServer: ''
  saslauthd: 
    ldapSsl: false
  saslauthd: 
    mechOptions: ''
  saslauthd: 
    mechanisms: ''
  spamassassin:
    enabled: false
  spamassassin:
    kill: ''
  spamassassin: 
    shortcircuitBayesHam: ''
  spamassassin:
    shortcircuitBayesSpam: ''
  spamassassin: 
    spamSubject: ''
  spamassassin: 
    tag2: ''
  spamassassin: 
    tag: ''
  spoofProtection: false
  srs: 
    domainname: ''
  srs: 
    enabled: false
  srs: 
    excludeDomains: ''
  srs: 
    secret: ''
  srs: 
    senderClasses: ''
  virusmailsDeleteDelay: ''

service:
  mailserver:
    type: NodePort
    externalTrafficPolicy: Cluster
    nodePorts:
      http: ''

ingress:
  mailserver:
    certificate: ''
    enabled: false
    hostname: ''
    path: /
    tls: false
    issuer:
      name: letsencrypt-staging

persistence:
  accessMode: ReadWriteOnce
  enabled: false
  existingClaim: ''
  size: 1Gi
  storageClass: ''
  velero:
    enabled: false
  stash:
    enabled: false
    keepLast: 30
    paused: false
    repository: stash-stash
    schedule: '0 0 * * *'
    restore:
      snapshot: ''

probes:
  liveness:
    initialDelaySeconds: 120
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 6
    successThreshold: 1
  readiness:
    initialDelaySeconds: 30
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 6
    successThreshold: 1
