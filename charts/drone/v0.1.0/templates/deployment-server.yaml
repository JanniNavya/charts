apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ template "drone.fullname" . }}-server
  labels:
    app: {{ template "drone.name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  template:
    metadata:
      labels:
        app: {{ template "drone.name" . }}
        release: {{ .Release.Name }}
        component: server
    spec:
{{- if .Values.server.schedulerName }}
      schedulerName: "{{ .Values.server.schedulerName }}"
{{- end }}
{{- if .Values.server.affinity }}
      affinity:
{{ toYaml .Values.server.affinity | indent 8 }}
{{- end }}
{{- if .Values.server.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.server.nodeSelector | indent 8 }}
{{- end }}
      containers:
        - name: {{ template "drone.fullname" . }}-server
          image: {{ .Values.images.server.repository }}:{{ .Values.images.server.tag }}
          imagePullPolicy: {{ .Values.images.server.pullPolicy }}
          env:
            - name: DRONE_SECRET
              value: some-secret
            - name: DRONE_HOST
              value: http://{{ template "drone.fullname" . }}
          ports:
            - name: http
              containerPort: 8000
              protocol: TCP
            - name: https
              containerPort: 8000
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          volumeMounts:
            - name: data
              mountPath: /var/lib/drone
      volumes:
        - name: data
          emptyDir: {}
