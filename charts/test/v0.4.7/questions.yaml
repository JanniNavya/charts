categories:
  - Server
questions:

# Images
  - variable: images.nginx.repository
    default: nginx
    description: ''
    type: string
    required: true
    label: 'nginx repository'
    group: Images
  - variable: images.nginx.tag
    default: latest
    description: ''
    type: string
    required: true
    label: 'nginx tag'
    group: Images
  - variable: images.mongoExpress.repository
    default: mongo-express
    description: ''
    type: string
    required: true
    label: 'mongo express repository'
    show_if: config.mongoExpress.enabled=true
    group: Images
  - variable: images.mongoExpress.tag
    default: 0.49.0
    description: ''
    type: string
    required: true
    label: 'mongo express tag'
    show_if: config.mongoExpress.enabled=true
    group: Images
  - variable: images.phpmyadmin.repository
    default: phpmyadmin/phpmyadmin
    description: ''
    type: string
    required: true
    label: 'phpmyadmin repository'
    show_if: config.mysql.phpmyadmin=true
    group: Images
  - variable: images.phpmyadmin.tag
    default: 4.7
    description: ''
    type: string
    required: true
    label: 'phpmyadmin tag'
    show_if: config.mysql.phpmyadmin=true
    group: Images
  - variable: images.pgadmin.repository
    default: dpage/pgadmin4
    description: ''
    type: string
    required: true
    label: 'pgadmin repository'
    show_if: config.pgadmin.enabled=true
    group: Images
  - variable: images.pgadmin.tag
    default: 4.11
    description: ''
    type: string
    required: true
    label: 'pgadmin tag'
    show_if: config.pgadmin.enabled=true
    group: Images
  - variable: images.phpredisadmin.repository
    default: erikdubbelboer/phpredisadmin
    description: ''
    type: string
    required: true
    label: 'phpredisadmin repository'
    show_if: config.phpredisadmin.enabled=true
    group: Images
  - variable: images.phpredisadmin.tag
    default: v1.11.4
    description: ''
    type: string
    required: true
    label: 'phpredisadmin tag'
    show_if: config.phpredisadmin.enabled=true
    group: Images

# Config
  - variable: config.imagePullPolicy
    default: IfNotPresent
    description: ''
    type: enum
    options:
      - IfNotPresent
      - Always
    required: true
    label: 'pull policy'
    group: Config
  - variable: config.updateStrategy
    default: RollingUpdate
    description: ''
    type: enum
    options:
      - RollingUpdate
      - Recreate
    required: true
    label: 'update strategy'
    group: Config

# MongoDB Config
  - variable: config.mongodb.internal
    default: true
    description: ''
    type: boolean
    required: true
    label: internal
    group: 'MongoDB Config'
  - variable: config.mongodb.version
    default: 4.1.7-v1
    description: ''
    type: string
    required: true
    label: version
    show_if: config.mongodb.internal=true
    group: 'MongoDB Config'
  - variable: config.mongodb.prometheus
    default: false
    description: ''
    type: boolean
    required: true
    label: prometheus
    show_if: config.mongodb.internal=true
    group: 'MongoDB Config'
  - variable: config.mongodb.replicas
    default: 1
    description: ''
    type: int
    required: true
    label: replicas
    show_if: config.mongodb.internal=true
    group: 'MongoDB Config'
  - variable: config.mongodb.secret
    default: ''
    description: ''
    type: string
    required: false
    label: secret
    show_if: config.mongodb.internal=true
    group: 'MongoDB Config'
  - variable: config.mongodb.customConfig
    default: ''
    description: ''
    type: string
    required: false
    label: 'custom config'
    show_if: config.mongodb.internal=true
    group: 'MongoDB Config'
  - variable: config.mongodb.sharding.enabled
    default: false
    description: ''
    type: boolean
    required: true
    label: 'sharding enabled'
    show_if: config.mongodb.internal=true
    group: 'MongoDB Config'
  - variable: config.mongodb.sharding.configServerReplicas
    default: 3
    description: ''
    type: int
    required: true
    show_if: config.mongodb.internal=true&&config.mongodb.sharding.enabled=true
    label: 'sharding config server replicas'
    group: 'MongoDB Config'
  - variable: config.mongodb.sharding.mongosReplicas
    default: 2
    description: ''
    type: int
    required: true
    show_if: config.mongodb.internal=true&&config.mongodb.sharding.enabled=true
    label: 'sharding mongos replicas'
    group: 'MongoDB Config'
  - variable: config.mongodb.sharding.shards
    default: 3
    description: ''
    type: int
    required: true
    show_if: config.mongodb.internal=true&&config.mongodb.sharding.enabled=true
    label: 'sharding shards'
    group: 'MongoDB Config'
  - variable: config.mongodb.host
    default: ''
    description: ''
    type: string
    required: false
    label: host
    show_if: config.mongodb.internal=false
    group: 'MongoDB Config'
  - variable: config.mongodb.database
    default: test
    description: ''
    type: string
    required: true
    label: database
    show_if: config.mongodb.internal=false
    group: 'MongoDB Config'
  - variable: config.mongodb.password
    default: ''
    description: ''
    type: password
    required: false
    label: password
    show_if: config.mongodb.internal=false
    group: 'MongoDB Config'
  - variable: config.mongodb.port
    default: 27017
    description: ''
    type: int
    min: 0
    max: 50000
    required: true
    label: port
    show_if: config.mongodb.internal=false
    group: 'MongoDB Config'
  - variable: config.mongodb.url
    default: ''
    description: ''
    type: string
    required: false
    label: url
    show_if: config.mongodb.internal=false
    group: 'MongoDB Config'
  - variable: config.mongodb.username
    default: ''
    description: ''
    type: string
    required: false
    label: username
    show_if: config.mongodb.internal=false
    group: 'MongoDB Config'

# MongoExpress
  - variable: config.mongoExpress.enabled
    default: false
    description: ''
    type: boolean
    required: true
    label: 'mongo express'
    show_subquestion_if: true
    group: MongoExpress
    subquestions:
      - variable: config.mongoExpress.username
        default: admin
        description: ''
        type: string
        required: true
        label: 'mongo express username'
        group: MongoExpress
      - variable: config.mongoExpress.password
        default: pass
        description: ''
        type: password
        required: true
        label: 'mongo express password'
        group: MongoExpress

# MySQL Config
  - variable: config.mysql.internal
    default: true
    description: ''
    type: boolean
    required: true
    label: internal
    group: 'MySQL Config'
  - variable: config.mysql.version
    default: 8.0.3
    description: ''
    type: string
    required: true
    label: version
    show_if: config.mysql.internal=true
    group: 'MySQL Config'
  - variable: config.mysql.phpmyadmin
    default: false
    description: ''
    type: boolean
    required: true
    label: phpmyadmin
    group: 'MySQL Config'
  - variable: config.mysql.prometheus
    default: false
    description: ''
    type: boolean
    required: true
    label: prometheus
    show_if: config.mysql.internal=true
    group: 'MySQL Config'
  - variable: config.mysql.replicas
    default: 1
    description: ''
    type: int
    required: true
    label: replicas
    show_if: config.mysql.internal=true
    group: 'MySQL Config'
  - variable: config.mysql.secret
    default: ''
    description: ''
    type: string
    required: false
    label: secret
    show_if: config.mysql.internal=true
    group: 'MySQL Config'
  - variable: config.mysql.customConfig
    default: ''
    description: ''
    type: string
    required: false
    label: 'custom config'
    show_if: config.mysql.internal=true
    group: 'MySQL Config'
  - variable: config.mysql.sharding.enabled
    default: false
    description: ''
    type: boolean
    required: true
    label: 'sharding enabled'
    show_if: config.mysql.internal=true
    group: 'MySQL Config'
  - variable: config.mysql.sharding.configServerReplicas
    default: 3
    description: ''
    type: int
    required: true
    show_if: config.mysql.internal=true&&config.mysql.sharding.enabled=true
    label: 'sharding config server replicas'
    group: 'MySQL Config'
  - variable: config.mysql.sharding.mongosReplicas
    default: 2
    description: ''
    type: int
    required: true
    show_if: config.mysql.internal=true&&config.mysql.sharding.enabled=true
    label: 'sharding mongos replicas'
    group: 'MySQL Config'
  - variable: config.mysql.sharding.shards
    default: 3
    description: ''
    type: int
    required: true
    show_if: config.mysql.internal=true&&config.mysql.sharding.enabled=true
    label: 'sharding shards'
    group: 'MySQL Config'
  - variable: config.mysql.host
    default: ''
    description: ''
    type: string
    required: false
    label: host
    show_if: config.mysql.internal=false
    group: 'MySQL Config'
  - variable: config.mysql.database
    default: test
    description: ''
    type: string
    required: true
    label: database
    show_if: config.mysql.internal=false
    group: 'MySQL Config'
  - variable: config.mysql.password
    default: root
    description: ''
    type: password
    required: true
    label: password
    show_if: config.mysql.internal=false
    group: 'MySQL Config'
  - variable: config.mysql.port
    default: 3306
    description: ''
    type: int
    min: 0
    max: 50000
    required: true
    label: port
    show_if: config.mysql.internal=false
    group: 'MySQL Config'
  - variable: config.mysql.url
    default: ''
    description: ''
    type: string
    required: false
    label: url
    show_if: config.mysql.internal=false
    group: 'MySQL Config'
  - variable: config.mysql.username
    default: root
    description: ''
    type: string
    required: true
    label: username
    show_if: config.mysql.internal=false
    group: 'MySQL Config'

# Postgres Config
  - variable: config.postgres.internal
    default: true
    description: ''
    type: boolean
    required: true
    label: internal
    group: 'Postgres Config'
  - variable: config.postgres.version
    default: 11.1
    description: ''
    type: string
    required: true
    label: version
    show_if: config.postgres.internal=true
    group: 'Postgres Config'
  - variable: config.postgres.standbyMode
    default: hot
    description: ''
    type: enum
    options:
      - hot
      - warm
    required: true
    label: 'standby mode'
    show_if: config.postgres.internal=true
    group: 'Postgres Config'
  - variable: config.postgres.prometheus
    default: false
    description: ''
    type: boolean
    required: true
    label: prometheus
    show_if: config.postgres.internal=true
    group: 'Postgres Config'
  - variable: config.postgres.replicas
    default: 1
    description: ''
    type: int
    required: true
    label: replicas
    show_if: config.postgres.internal=true
    group: 'Postgres Config'
  - variable: config.postgres.secret
    default: ''
    description: ''
    type: string
    required: false
    label: secret
    show_if: config.postgres.internal=true
    group: 'Postgres Config'
  - variable: config.postgres.customConfig
    default: ''
    description: ''
    type: string
    required: false
    label: 'custom config'
    show_if: config.postgres.internal=true
    group: 'Postgres Config'
  - variable: config.postgres.host
    default: ''
    description: ''
    type: string
    required: false
    label: host
    show_if: config.postgres.internal=false
    group: 'Postgres Config'
  - variable: config.postgres.database
    default: test
    description: ''
    type: string
    required: true
    label: database
    show_if: config.postgres.internal=false
    group: 'Postgres Config'
  - variable: config.postgres.password
    default: postgres
    description: ''
    type: password
    required: true
    label: password
    show_if: config.postgres.internal=false
    group: 'Postgres Config'
  - variable: config.postgres.port
    default: 5432
    description: ''
    type: int
    min: 0
    max: 50000
    required: true
    label: port
    show_if: config.postgres.internal=false
    group: 'Postgres Config'
  - variable: config.postgres.url
    default: ''
    description: ''
    type: string
    required: false
    label: url
    show_if: config.postgres.internal=false
    group: 'Postgres Config'
  - variable: config.postgres.username
    default: postgres
    description: ''
    type: string
    required: true
    label: username
    show_if: config.postgres.internal=false
    group: 'Postgres Config'

# PGAdmin
  - variable: config.pgadmin.enabled
    default: false
    description: ''
    type: boolean
    required: true
    label: pgadmin
    show_subquestion_if: true
    group: PGAdmin
    subquestions:
      - variable: config.pgadmin.email
        default: admin
        description: ''
        type: string
        required: true
        label: 'pgadmin email'
        group: PGAdmin
      - variable: config.pgadmin.password
        default: admin
        description: ''
        type: password
        required: true
        label: 'pgadmin password'
        group: PGAdmin

# Redis Config
  - variable: config.redis.internal
    default: true
    description: ''
    type: boolean
    required: true
    label: internal
    group: 'Redis Config'
  - variable: config.redis.version
    default: 5.0.3-v1
    description: ''
    type: string
    required: true
    label: version
    show_if: config.redis.internal=true
    group: 'Redis Config'
  - variable: config.redis.prometheus
    default: false
    description: ''
    type: boolean
    required: true
    label: prometheus
    show_if: config.redis.internal=true
    group: 'Redis Config'
  - variable: config.redis.replicas
    default: 1
    description: ''
    type: int
    required: true
    label: replicas
    show_if: config.redis.internal=true
    group: 'Redis Config'
  - variable: config.redis.shards
    default: 1
    description: ''
    type: int
    required: true
    label: shards
    show_if: config.redis.internal=true
    group: 'Redis Config'
  - variable: config.redis.secret
    default: ''
    description: ''
    type: string
    required: false
    label: secret
    show_if: config.redis.internal=true
    group: 'Redis Config'
  - variable: config.redis.customConfig
    default: ''
    description: ''
    type: string
    required: false
    label: 'custom config'
    show_if: config.redis.internal=true
    group: 'Redis Config'
  - variable: config.redis.host
    default: ''
    description: ''
    type: string
    required: false
    label: host
    show_if: config.redis.internal=false
    group: 'Redis Config'
  - variable: config.redis.password
    default: ''
    description: ''
    type: password
    required: false
    label: password
    show_if: config.redis.internal=false
    group: 'Redis Config'
  - variable: config.redis.port
    default: 6379
    description: ''
    type: int
    min: 0
    max: 50000
    required: true
    label: port
    show_if: config.redis.internal=false
    group: 'Redis Config'
  - variable: config.redis.url
    default: ''
    description: ''
    type: string
    required: false
    label: url
    show_if: config.redis.internal=false
    group: 'Redis Config'
  - variable: config.redis.username
    default: ''
    description: ''
    type: string
    required: false
    label: username
    show_if: config.redis.internal=false
    group: 'Redis Config'

# PHPRedisAdmin
  - variable: config.phpredisadmin.enabled
    default: false
    description: ''
    type: boolean
    required: true
    label: phpredisadmin
    show_subquestion_if: true
    group: PHPRedisAdmin
    subquestions:
      - variable: config.phpredisadmin.username
        default: admin
        description: ''
        type: string
        required: true
        label: 'phpredisadmin username'
        group: PHPRedisAdmin
      - variable: config.phpredisadmin.password
        default: pass
        description: ''
        type: password
        required: true
        label: 'phpredisadmin password'
        group: PHPRedisAdmin

# Persistence
  - variable: persistence.enabled
    default: false
    description: ''
    type: boolean
    required: true
    label: enabled
    show_subquestion_if: true
    group: Persistence
    subquestions:
      - variable: persistence.size
        default: 1Gi
        description: ''
        type: string
        required: true
        label: size
      - variable: persistence.storageClass
        default: ''
        description: ''
        type: storageclass
        required: false
        label: 'storage class'
      - variable: persistence.accessMode
        default: ReadWriteOnce
        description: ''
        type: enum
        options:
          - ReadWriteOnce
          - ReadWriteMany
          - ReadOnlyMany
        required: false
        label: 'access mode'
      - variable: persistence.existingClaim
        default: ''
        description: ''
        type: string
        required: false
        label: 'existing claim'
      - variable: persistence.backup.enabled
        default: false
        description: ''
        type: boolean
        required: true
        label: 'backup enabled'
      - variable: persistence.backup.resticPassword
        default: pass
        description: ''
        type: password
        required: true
        show_if: persistence.backup.enabled=true
        label: 'backup restic password'
      - variable: persistence.backup.schedule
        default: '@midnight'
        description: ''
        type: string
        required: true
        show_if: persistence.backup.enabled=true
        label: 'backup schedule'
      - variable: persistence.backup.keepLast
        default: 5
        description: ''
        type: int
        required: true
        show_if: persistence.backup.enabled=true
        label: 'backup keep last'
      - variable: persistence.backup.type
        default: s3
        description: ''
        type: enum
        options:
          - gcs
          - s3
          - azure
        required: false
        show_if: persistence.backup.enabled=true
        label: 'backup type'
      - variable: persistence.backup.awsAccessKey
        default: ''
        description: ''
        type: string
        required: false
        show_if: persistence.backup.enabled=true&&persistence.backup.type=s3
        label: 'aws access key'
      - variable: persistence.backup.awsSecretKey
        default: ''
        description: ''
        type: password
        required: false
        show_if: persistence.backup.enabled=true&&persistence.backup.type=s3
        label: 'aws secret key'
      - variable: persistence.backup.googleProjectId
        default: ''
        description: ''
        type: string
        required: false
        show_if: persistence.backup.enabled=true&&persistence.backup.type=gcs
        label: 'google project id'
      - variable: persistence.backup.googleServiceKey
        default: ''
        description: ''
        type: password
        required: false
        show_if: persistence.backup.enabled=true&&persistence.backup.type=gcs
        label: 'google service key'
      - variable: persistence.backup.azureAccountName
        default: ''
        description: ''
        type: string
        required: false
        show_if: persistence.backup.enabled=true&&persistence.backup.type=azure
        label: 'azure account name'
      - variable: persistence.backup.azureAccountKey
        default: ''
        description: ''
        type: password
        required: false
        show_if: persistence.backup.enabled=true&&persistence.backup.type=azure
        label: 'azure account key'
      - variable: persistence.backup.container
        default: ''
        description: ''
        type: string
        required: false
        show_if: persistence.backup.enabled=true&&persistence.backup.type=azure
        label: 'backup container'
      - variable: persistence.backup.bucket
        default: ''
        description: ''
        type: string
        required: false
        show_if: persistence.backup.enabled=true
        label: 'backup bucket'
      - variable: persistence.backup.endpoint
        default: s3.amazonaws.com
        description: ''
        type: string
        required: true
        show_if: persistence.backup.enabled=true&&persistence.backup.type=s3
        label: 'backup endpoint'
      - variable: persistence.backup.prefix
        default: ''
        description: ''
        type: string
        required: false
        show_if: persistence.backup.enabled=true
        label: 'backup prefix'
      - variable: persistence.backup.restore.testSnapshot
        default: ''
        description: ''
        type: string
        required: false
        show_if: persistence.backup.enabled=true
        label: 'backup restore test snapshot'
      - variable: persistence.backup.restore.mongodbSnapshot
        default: ''
        description: ''
        type: string
        required: false
        show_if: persistence.backup.enabled=true
        label: 'backup restore mongodb snapshot'
      - variable: persistence.backup.restore.mysqlSnapshot
        default: ''
        description: ''
        type: string
        required: false
        show_if: persistence.backup.enabled=true
        label: 'backup restore mysql snapshot'
      - variable: persistence.backup.restore.postgresSnapshot
        default: ''
        description: ''
        type: string
        required: false
        show_if: persistence.backup.enabled=true
        label: 'backup restore postgres snapshot'

# Services and Load Balancing
  - variable: ingress.nginx.enabled
    default: true
    description: ''
    type: boolean
    label: 'nginx ingress enabled'
    show_subquestion_if: true
    group: 'Services and Load Balancing'
    subquestions:
      - variable: ingress.nginx.tls
        default: false
        description: ''
        type: boolean
        required: true
        label: 'nginx ingress tls'
      - variable: ingress.nginx.hostname
        default: xip.io
        description: ''
        type: hostname
        required: true
        label: 'nginx ingress hostname'
      - variable: ingress.nginx.path
        default: /
        description: ''
        type: string
        required: true
        label: 'nginx ingress path'
      - variable: ingress.nginx.issuer.name
        default: letsencrypt-staging
        description: ''
        type: enum
        show_if: ingress.nginx.tls=true
        options:
          - none
          - letsencrypt-staging
          - letsencrypt-prod
        required: true
        label: 'nginx ingress issuer name'
      - variable: ingress.nginx.certificate
        default: ''
        description: ''
        type: string
        show_if: ingress.nginx.tls=true&&ingress.nginx.issuer.name=none
        required: false
        label: 'nginx ingress certificate'
  - variable: service.nginx.type
    default: NodePort
    description: ''
    type: enum
    show_if: ingress.nginx.enabled=false
    options:
      - ClusterIP
      - NodePort
      - LoadBalancer
    required: true
    label: 'nginx service type'
    show_subquestion_if: NodePort
    group: 'Services and Load Balancing'
    subquestions:
      - variable: service.nginx.nodePorts.http
        default: ''
        description: ''
        type: int
        min: 30000
        max: 32767
        show_if: ingress.nginx.enabled=false
        label: 'nginx http port'
  - variable: ingress.mongoExpress.enabled
    default: true
    description: ''
    type: boolean
    show_if: config.mongoExpress.enabled=true
    label: 'mongo express ingress enabled'
    show_subquestion_if: true
    group: 'Services and Load Balancing'
    subquestions:
      - variable: ingress.mongoExpress.tls
        default: false
        description: ''
        type: boolean
        show_if: config.mongoExpress.enabled=true
        required: true
        label: 'mongo express ingress tls'
      - variable: ingress.mongoExpress.hostname
        default: xip.io
        description: ''
        type: hostname
        show_if: config.mongoExpress.enabled=true
        required: true
        label: 'mongo express ingress hostname'
      - variable: ingress.mongoExpress.path
        default: /
        description: ''
        type: string
        show_if: config.mongoExpress.enabled=true
        required: true
        label: 'mongo express ingress path'
      - variable: ingress.mongoExpress.issuer.name
        default: letsencrypt-staging
        description: ''
        type: enum
        show_if: config.mongoExpress.enabled=true&&ingress.mongoExpress.tls=true
        options:
          - none
          - letsencrypt-staging
          - letsencrypt-prod
        required: true
        label: 'mongo express ingress issuer name'
      - variable: ingress.mongoExpress.certificate
        default: ''
        description: ''
        type: string
        show_if: config.mongoExpress.enabled=true&&ingress.mongoExpress.tls=true&&ingress.mongoExpress.issuer.name=none
        required: false
        label: 'mongo express ingress certificate'
  - variable: service.mongoExpress.type
    default: NodePort
    description: ''
    type: enum
    show_if: ingress.mongoExpress.enabled=false&&config.mongoExpress.enabled=true
    options:
      - ClusterIP
      - NodePort
      - LoadBalancer
    required: true
    label: 'mongo express service type'
    show_subquestion_if: NodePort
    group: 'Services and Load Balancing'
    subquestions:
      - variable: service.mongoExpress.nodePorts.http
        default: ''
        description: ''
        type: int
        min: 30000
        max: 32767
        show_if: ingress.mongoExpress.enabled=false
        label: 'mongo express port'
  - variable: ingress.phpmyadmin.enabled
    default: true
    description: ''
    type: boolean
    show_if: config.phpmyadmin.enabled=true
    label: 'phpmyadmin ingress enabled'
    show_subquestion_if: true
    group: 'Services and Load Balancing'
    subquestions:
      - variable: ingress.phpmyadmin.tls
        default: false
        description: ''
        type: boolean
        show_if: config.phpmyadmin.enabled=true
        required: true
        label: 'phpmyadmin ingress tls'
      - variable: ingress.phpmyadmin.hostname
        default: xip.io
        description: ''
        type: hostname
        show_if: config.phpmyadmin.enabled=true
        required: true
        label: 'phpmyadmin ingress hostname'
      - variable: ingress.phpmyadmin.path
        default: /
        description: ''
        type: string
        show_if: config.phpmyadmin.enabled=true
        required: true
        label: 'phpmyadmin ingress path'
      - variable: ingress.phpmyadmin.issuer.name
        default: letsencrypt-staging
        description: ''
        type: enum
        show_if: config.phpmyadmin.enabled=true&&ingress.phpmyadmin.tls=true
        options:
          - none
          - letsencrypt-staging
          - letsencrypt-prod
        required: true
        label: 'phpmyadmin ingress issuer name'
      - variable: ingress.phpmyadmin.certificate
        default: ''
        description: ''
        type: string
        show_if: config.phpmyadmin.enabled=true&&ingress.phpmyadmin.tls=true&&ingress.phpmyadmin.issuer.name=none
        required: false
        label: 'phpmyadmin ingress certificate'
  - variable: service.phpmyadmin.type
    default: NodePort
    description: ''
    type: enum
    show_if: ingress.phpmyadmin.enabled=false&&config.phpmyadmin.enabled=true
    options:
      - ClusterIP
      - NodePort
      - LoadBalancer
    required: true
    label: 'phpmyadmin service type'
    show_subquestion_if: NodePort
    group: 'Services and Load Balancing'
    subquestions:
      - variable: service.phpmyadmin.nodePorts.http
        default: ''
        description: ''
        type: int
        min: 30000
        max: 32767
        show_if: ingress.phpmyadmin.enabled=false
        label: 'phpmyadmin port'
  - variable: ingress.pgadmin.enabled
    default: true
    description: ''
    type: boolean
    show_if: config.pgadmin.enabled=true
    label: 'pgadmin ingress enabled'
    show_subquestion_if: true
    group: 'Services and Load Balancing'
    subquestions:
      - variable: ingress.pgadmin.tls
        default: false
        description: ''
        type: boolean
        show_if: config.pgadmin.enabled=true
        required: true
        label: 'pgadmin ingress tls'
      - variable: ingress.pgadmin.hostname
        default: xip.io
        description: ''
        type: hostname
        show_if: config.pgadmin.enabled=true
        required: true
        label: 'pgadmin ingress hostname'
      - variable: ingress.pgadmin.path
        default: /
        description: ''
        type: string
        show_if: config.pgadmin.enabled=true
        required: true
        label: 'pgadmin ingress path'
      - variable: ingress.pgadmin.issuer.name
        default: letsencrypt-staging
        description: ''
        type: enum
        show_if: config.pgadmin.enabled=true&&ingress.pgadmin.tls=true
        options:
          - none
          - letsencrypt-staging
          - letsencrypt-prod
        required: true
        label: 'pgadmin ingress issuer name'
      - variable: ingress.pgadmin.certificate
        default: ''
        description: ''
        type: string
        show_if: config.pgadmin.enabled=true&&ingress.pgadmin.tls=true&&ingress.pgadmin.issuer.name=none
        required: false
        label: 'pgadmin ingress certificate'
  - variable: service.pgadmin.type
    default: NodePort
    description: ''
    type: enum
    show_if: ingress.pgadmin.enabled=false&&config.pgadmin.enabled=true
    options:
      - ClusterIP
      - NodePort
      - LoadBalancer
    required: true
    label: 'pgadmin service type'
    show_subquestion_if: NodePort
    group: 'Services and Load Balancing'
    subquestions:
      - variable: service.pgadmin.nodePorts.http
        default: ''
        description: ''
        type: int
        min: 30000
        max: 32767
        show_if: ingress.pgadmin.enabled=false
        label: 'pgadmin port'
  - variable: ingress.phpredisadmin.enabled
    default: true
    description: ''
    type: boolean
    show_if: config.phpredisadmin.enabled=true
    label: 'phpredisadmin ingress enabled'
    show_subquestion_if: true
    group: 'Services and Load Balancing'
    subquestions:
      - variable: ingress.phpredisadmin.tls
        default: false
        description: ''
        type: boolean
        show_if: config.phpredisadmin.enabled=true
        required: true
        label: 'phpredisadmin ingress tls'
      - variable: ingress.phpredisadmin.hostname
        default: xip.io
        description: ''
        type: hostname
        show_if: config.phpredisadmin.enabled=true
        required: true
        label: 'phpredisadmin ingress hostname'
      - variable: ingress.phpredisadmin.path
        default: /
        description: ''
        type: string
        show_if: config.phpredisadmin.enabled=true
        required: true
        label: 'phpredisadmin ingress path'
      - variable: ingress.phpredisadmin.issuer.name
        default: letsencrypt-staging
        description: ''
        type: enum
        show_if: config.phpredisadmin.enabled=true&&ingress.phpredisadmin.tls=true
        options:
          - none
          - letsencrypt-staging
          - letsencrypt-prod
        required: true
        label: 'phpredisadmin ingress issuer name'
      - variable: ingress.phpredisadmin.certificate
        default: ''
        description: ''
        type: string
        show_if: config.phpredisadmin.enabled=true&&ingress.phpredisadmin.tls=true&&ingress.phpredisadmin.issuer.name=none
        required: false
        label: 'phpredisadmin ingress certificate'
  - variable: service.phpredisadmin.type
    default: NodePort
    description: ''
    type: enum
    show_if: ingress.phpredisadmin.enabled=false&&config.phpredisadmin.enabled=true
    options:
      - ClusterIP
      - NodePort
      - LoadBalancer
    required: true
    label: 'phpredisadmin service type'
    show_subquestion_if: NodePort
    group: 'Services and Load Balancing'
    subquestions:
      - variable: service.phpredisadmin.nodePorts.http
        default: ''
        description: ''
        type: int
        min: 30000
        max: 32767
        show_if: ingress.phpredisadmin.enabled=false
        label: 'phpredisadmin port'
  - variable: service.mongodb.type
    default: ClusterIP
    description: ''
    type: enum
    options:
      - ClusterIP
      - NodePort
      - LoadBalancer
    required: true
    label: 'mongodb service type'
    show_subquestion_if: NodePort
    group: 'Services and Load Balancing'
    subquestions:
      - variable: service.mongodb.nodePorts.mongodb
        default: ''
        description: ''
        type: int
        min: 30000
        max: 32767
        label: 'mongodb port'
  - variable: service.mysql.type
    default: ClusterIP
    description: ''
    type: enum
    options:
      - ClusterIP
      - NodePort
      - LoadBalancer
    required: true
    label: 'mysql service type'
    show_subquestion_if: NodePort
    group: 'Services and Load Balancing'
    subquestions:
      - variable: service.mysql.nodePorts.mysql
        default: ''
        description: ''
        type: int
        min: 30000
        max: 32767
        label: 'mysql port'
  - variable: service.postgres.type
    default: ClusterIP
    description: ''
    type: enum
    options:
      - ClusterIP
      - NodePort
      - LoadBalancer
    required: true
    label: 'postgres service type'
    show_subquestion_if: NodePort
    group: 'Services and Load Balancing'
    subquestions:
      - variable: service.postgres.nodePorts.postgres
        default: ''
        description: ''
        type: int
        min: 30000
        max: 32767
        label: 'postgres port'
  - variable: service.redis.type
    default: ClusterIP
    description: ''
    type: enum
    options:
      - ClusterIP
      - NodePort
      - LoadBalancer
    required: true
    label: 'redis service type'
    show_subquestion_if: NodePort
    group: 'Services and Load Balancing'
    subquestions:
      - variable: service.redis.nodePorts.redis
        default: ''
        description: ''
        type: int
        min: 30000
        max: 32767
        label: 'redis port'
