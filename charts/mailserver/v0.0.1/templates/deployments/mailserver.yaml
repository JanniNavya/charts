apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "mailserver.fullname" . }}-mailserver
  labels:
    app: {{ template "mailserver.name" . }}-mailserver
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
  {{- if .Values.persistence.velero.enabled }}
  annotations:
    backup.velero.io/backup-volumes: data
  {{- end }}
spec:
  selector:
    matchLabels:
      app: {{ template "mailserver.name" . }}-mailserver
      release: {{ .Release.Name }}
  strategy:
    type: {{ .Values.config.updateStrategy }}
  template:
    metadata:
      labels:
        app: {{ template "mailserver.name" . }}-mailserver
        release: {{ .Release.Name }}
    spec:
      containers:
        - name: {{ template "mailserver.fullname" . }}-mailserver
          image: {{ .Values.images.mailserver.repository }}:{{ .Values.images.mailserver.tag }}
          imagePullPolicy: {{ .Values.config.imagePullPolicy }}
          securityContext:
            capabilities:
              add:
                - NET_ADMIN
          ports:
            - name: smtp
              containerPort: 25
              protocol: TCP
            - name: smtp-secure
              containerPort: 465
              protocol: TCP
            - name: smtp-auth
              containerPort: 587
            - name: imap
              containerPort: 143
              protocol: TCP
            - name: imap-secure
              containerPort: 993
              protocol: TCP
          volumeMounts:
            - name: certs
              mountPath: /certs
            - name: data
              mountPath: /_data
            - name: data
              mountPath: /var/mail
              subPath: data
            - name: data
              mountPath: /var/mail-state
              subPath: state
            - name: data
              mountPath: /var/log/mail
              subPath: log
          env:
            - name: FETCHMAIL_POLL
              value: '120'
            - name: ONE_DIR
              value: '1'
            - name: DMS_DEBUG
              value: '0'

            {{- if (and .Values.ingress.mailserver.enabled .Values.ingress.mailserver.tls) }}
            - name: SSL_TYPE
              value: manual
            - name: SSL_CERT_PATH
              value: /certs/tls.crt
            - name: SSL_KEY_PATH
              value: /certs/tls.key
            {{- end }}



            - name: OVERRIDE_HOSTNAME
              valueFrom:
                configMapKeyRef:
                  name: {{ template "mailserver.fullname" . }}
                  key: hostname
            - name: ENABLE_FETCHMAIL
              valueFrom:
                configMapKeyRef:
                  name: {{ template "mailserver.fullname" . }}
                  key: fetchmail_enabled
            - name: ENABLE_SPAMASSASSIN
              valueFrom:
                configMapKeyRef:
                  name: {{ template "mailserver.fullname" . }}
                  key: spamassassin_enabled
            - name: ENABLE_CLAMAV
              valueFrom:
                configMapKeyRef:
                  name: {{ template "mailserver.fullname" . }}
                  key: clamav_enabled
            - name: ENABLE_FAIL2BAN
              valueFrom:
                configMapKeyRef:
                  name: {{ template "mailserver.fullname" . }}
                  key: fail2ban_enabled
            - name: ENABLE_POSTGREY
              valueFrom:
                configMapKeyRef:
                  name: {{ template "mailserver.fullname" . }}
                  key: postgrey_enabled
            - name: SPOOF_PROTECTION
              valueFrom:
                configMapKeyRef:
                  name: {{ template "mailserver.fullname" . }}
                  key: spoof_protection
            - name: ENABLE_SRS
              valueFrom:
                configMapKeyRef:
                  name: {{ template "mailserver.fullname" . }}
                  key: enable_srs
            - name: VIRUSMAILS_DELETE_DELAY
            - name: POSTFIX_MAILBOX_SIZE_LIMIT
            - name: POSTFIX_MESSAGE_SIZE_LIMIT
            - name: ENABLE_MANAGESIEVE
            - name: POSTMASTER_ADDRESS
            - name: SA_TAG
            - name: SA_TAG2
            - name: SA_KILL
            - name: SA_SPAM_SUBJECT
            - name: SA_SHORTCIRCUIT_BAYES_SPAM
            - name: SA_SHORTCIRCUIT_BAYES_HAM
            - name: FETCHMAIL_POLL
            - name: LDAP_START_TLS
            - name: LDAP_SERVER_HOST
            - name: LDAP_SEARCH_BASE
            - name: LDAP_BIND_DN
            - name: LDAP_BIND_PW
            - name: LDAP_QUERY_FILTER_USER
            - name: LDAP_QUERY_FILTER_GROUP
            - name: LDAP_QUERY_FILTER_ALIAS
            - name: LDAP_QUERY_FILTER_DOMAIN
            - name: DOVECOT_TLS
            - name: DOVECOT_USER_FILTER
            - name: DOVECOT_USER_ATTRS
            - name: DOVECOT_PASS_FILTER
            - name: DOVECOT_PASS_ATTRS
            - name: POSTGREY_DELAY
            - name: POSTGREY_MAX_AGE
            - name: POSTGREY_AUTO_WHITELIST_CLIENTS
            - name: POSTGREY_TEXT
            - name: ENABLE_SASLAUTHD
            - name: SASLAUTHD_MECHANISMS
            - name: SASLAUTHD_MECH_OPTIONS
            - name: SASLAUTHD_LDAP_SERVER
            - name: SASLAUTHD_LDAP_SSL
            - name: SASLAUTHD_LDAP_BIND_DN
            - name: SASLAUTHD_LDAP_PASSWORD
            - name: SASLAUTHD_LDAP_SEARCH_BASE
            - name: SASLAUTHD_LDAP_FILTER
            - name: SASL_PASSWD
            - name: SRS_SENDER_CLASSES
            - name: SRS_EXCLUDE_DOMAINS
            - name: SRS_SECRET
            - name: SRS_DOMAINNAME
            - name: DEFAULT_RELAY_HOST
          livenessProbe:
            tcpSocket:
              port: container
{{ toYaml .Values.probes.liveness | indent 12 }}
          readinessProbe:
            tcpSocket:
              port: container
{{ toYaml .Values.probes.readiness | indent 12 }}
      volumes:
        {{- if (and .Values.ingress.mailserver.enabled .Values.ingress.mailserver.tls) }}
        - name: certs
          secret:
            secretName: {{ template "mailserver.fullname" . }}-letsencrypt
        {{- end }}
        - name: data
          {{- if .Values.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.existingClaim | default (include "mailserver.fullname" . ) }}
          {{- else }}
          emptyDir: {}
          {{- end }}
{{- if (and .Values.persistence.stash.enabled (not (empty .Values.persistence.stash.restore.snapshot))) }}
---
apiVersion: stash.appscode.com/v1beta1
kind: RestoreSession
metadata:
  name: {{ template "mailserver.fullname" . }}-mailserver
  labels:
    app: {{ template "mailserver.name" . }}-mailserver
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  driver: Restic
  repository:
    name: {{ .Values.persistence.stash.repository | quote }}
  rules:
    - snapshots:
        - {{ .Values.persistence.stash.restore.snapshot | quote }}
  target:
    paths:
      /_data
    ref:
      apiVersion: apps/v1
      kind: Deployment
      name: {{ template "mailserver.fullname" . }}-mailserver
    volumeMounts:
      - name: data
        mountPath: /_data
{{- end }}
