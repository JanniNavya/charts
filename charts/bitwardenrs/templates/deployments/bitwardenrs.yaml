apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "bitwardenrs.fullname" . }}-bitwardenrs
  labels:
    app: {{ template "bitwardenrs.name" . }}-bitwardenrs
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
  {{- if .Values.persistence.backup.enabled }}
  annotations:
    stash.appscode.com/backup-blueprint: {{ template "bitwardenrs.sharedname" . }}-data
    stash.appscode.com/target-paths: /_data
    stash.appscode.com/volume-mounts: 'data:/_data'
  {{- end }}
spec:
  selector:
    matchLabels:
      app: {{ template "bitwardenrs.name" . }}-bitwardenrs
      release: {{ .Release.Name }}
  strategy:
    type: {{ .Values.config.updateStrategy }}
  template:
    metadata:
      labels:
        app: {{ template "bitwardenrs.name" . }}-bitwardenrs
        release: {{ .Release.Name }}
    spec:
      containers:
        - name: {{ template "bitwardenrs.fullname" . }}-bitwardenrs
          image: {{ .Values.images.bitwardenrs.repository }}:{{ .Values.images.bitwardenrs.tag }}
          imagePullPolicy: {{ .Values.config.imagePullPolicy }}
          ports:
            - name: container
              containerPort: 80
          volumeMounts:
            - name: data
              mountPath: /_data
            - name: data
              mountPath: '/data'
              subPath: data
          env:
            - name: INVITATIONS_ALLOWED
              value: 'false'
            - name: SIGNUPS_ALLOWED
              valueFrom:
                configMapKeyRef:
                  name: {{ template "bitwardenrs.fullname" . }}
                  key: signups_allowed
            - name: SMTP_FROM
              valueFrom:
                configMapKeyRef:
                  name: {{ template "bitwardenrs.fullname" . }}
                  key: smtp_from
            - name: SMTP_HOST
              valueFrom:
                configMapKeyRef:
                  name: {{ template "bitwardenrs.fullname" . }}
                  key: smtp_host
            - name: SMTP_USERNAME
              valueFrom:
                configMapKeyRef:
                  name: {{ template "bitwardenrs.fullname" . }}
                  key: smtp_username
            - name: SMTP_PORT
              valueFrom:
                configMapKeyRef:
                  name: {{ template "bitwardenrs.fullname" . }}
                  key: smtp_port
            - name: SMTP_SSL
              valueFrom:
                configMapKeyRef:
                  name: {{ template "bitwardenrs.fullname" . }}
                  key: smtp_ssl
            - name: SMTP_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ template "bitwardenrs.fullname" . }}
                  key: smtp_password
            - name: ADMIN_TOKEN
              valueFrom:
                secretKeyRef:
                  name: {{ template "bitwardenrs.fullname" . }}
                  key: admin_token
            {{- if .Values.config.mysql.internal }}
            - name: MYSQL_USERNAME
              valueFrom:
                secretKeyRef:
                  name: {{ template "bitwardenrs.sharedname" . }}-mysql-auth
                  key: MYSQL_USER
            {{- else }}
            - name: MYSQL_USERNAME
              valueFrom:
                configMapKeyRef:
                  name: {{ template "bitwardenrs.fullname" . }}
                  key: mysql_username
            {{- end }}
            - name: MYSQL_DATABASE
              valueFrom:
                configMapKeyRef:
                  name: {{ template "bitwardenrs.fullname" . }}
                  key: mysql_database
            - name: MYSQL_PORT
              valueFrom:
                configMapKeyRef:
                  name: {{ template "bitwardenrs.fullname" . }}
                  key: mysql_port
            - name: MYSQL_HOST
              valueFrom:
                configMapKeyRef:
                  name: {{ template "bitwardenrs.fullname" . }}
                  key: mysql_host
            {{- if .Values.config.mysql.internal }}
            - name: MYSQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ template "bitwardenrs.sharedname" . }}-mysql-auth
                  key: MYSQL_PASSWORDt
            {{- else }}
            - name: MYSQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ template "bitwardenrs.fullname" . }}
                  key: mysql_password
            {{- end }}


          livenessProbe:
            httpGet:
              path: /alive
              port: container
{{ toYaml .Values.probes.liveness | indent 12 }}
          readinessProbe:
            httpGet:
              path: /alive
              port: container
{{ toYaml .Values.probes.readiness | indent 12 }}
      volumes:
        - name: data
          {{- if .Values.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.existingClaim | default (include "bitwardenrs.fullname" . ) }}
          {{- else }}
          emptyDir: {}
          {{- end }}
{{- if (and .Values.persistence.backup.enabled (not (empty .Values.persistence.backup.restore.bitwardenrsSnapshot))) }}
{{- $restore := .Values.persistence.backup.restore }}
---
apiVersion: stash.appscode.com/v1beta1
kind: RestoreSession
metadata:
  name: {{ template "bitwardenrs.fullname" . }}-bitwardenrs
  labels:
    app: {{ template "bitwardenrs.name" . }}-bitwardenrs
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  driver: Restic
  repository:
    name: {{ template "bitwardenrs.sharedname" . }}-bitwardenrs
  rules:
    - snapshots:
        - {{ $restore.bitwardenrsSnapshot }}
  target:
    paths:
      /_data
    ref:
      apiVersion: apps/v1
      kind: Deployment
      name: {{ template "bitwardenrs.fullname" . }}-bitwardenrs
    volumeMounts:
      - name: data
        mountPath: /_data
{{- end }}
