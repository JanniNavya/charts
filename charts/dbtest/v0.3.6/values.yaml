images:
  nginx:
    repository: nginx
    tag: latest
  kibana:
    repository: kibana
    tag: 7.3.0
  mongo_express:
    repository: mongo-express
    tag: 0.49.0
  phpmyadmin:
    repository: phpmyadmin/phpmyadmin
    tag: 4.7
  pgadmin:
    repository: dpage/pgadmin4
    tag: 4.11
  phpredisadmin:
    repository: erikdubbelboer/phpredisadmin
    tag: v1.11.4

config:
  imagePullPolicy: IfNotPresent
  updateStrategy: RollingUpdate
  elasticsearch:
    commonConfig: ''
    dataConfig: ''
    database: dbtest
    host: ''
    internal: true
    kibana: true
    masterConfig: ''
    password: elastic
    port: 9200
    prometheus: false
    replicas: 1
    secret: ''
    url: ''
    username: elastic
    version: 6.4.0
  mongodb:
    customConfig: ''
    database: dbtest
    host: ''
    internal: true
    password: ''
    port: 27017
    prometheus: false
    replicas: 1
    secret: ''
    url: ''
    username: ''
    version: 4.1.7-v1
    sharding:
      configServerReplicas: 3
      enabled: false
      mongosReplicas: 2
      shards: 3
  mongo_express:
    enabled: true
    password: pass
    username: admin
  mysql:
    customConfig: ''
    database: dbtest
    host: ''
    internal: true
    password: root
    phpmyadmin: true
    port: 3306
    prometheus: false
    prometheus: false
    replicas: 3
    secret: ''
    standbyMode: hot
    topologyMode: GroupReplication
    url: ''
    username: root
    version: 8.0.3
  postgres:
    customConfig: ''
    database: dbtest
    host: ''
    internal: true
    password: postgres
    port: 5432
    prometheus: false
    replicas: 1
    secret: ''
    standbyMode: hot
    url: ''
    username: postgres
    version: 11.1
  pgadmin:
    email: admin
    enabled: true
    password: pass
  redis:
    customConfig: ''
    host: ''
    internal: true
    password: ''
    port: 6379
    prometheus: false
    replicas: 1
    secret: ''
    shards: 1
    url: ''
    username: ''
    version: 5.0.3-v1
  phpredisadmin:
    enabled: true
    password: pass
    username: admin

service:
  nginx:
    type: NodePort
    externalTrafficPolicy: Cluster
    nodePorts:
      http: ''
  kibana:
    type: NodePort
    externalTrafficPolicy: Cluster
    nodePorts:
      http: ''
  mongo_express:
    type: NodePort
    externalTrafficPolicy: Cluster
    nodePorts:
      http: ''
  phpmyadmin:
    type: NodePort
    externalTrafficPolicy: Cluster
    nodePorts:
      http: ''
  pgadmin:
    type: NodePort
    externalTrafficPolicy: Cluster
    nodePorts:
      http: ''
  phpredisadmin:
    type: NodePort
    externalTrafficPolicy: Cluster
    nodePorts:
      http: ''
  elasticsearch:
    type: ClusterIP
    externalTrafficPolicy: Cluster
    nodePorts:
      elasticsearch: ''
  mongodb:
    type: ClusterIP
    externalTrafficPolicy: Cluster
    nodePorts:
      mongodb: ''
  mysql:
    type: ClusterIP
    externalTrafficPolicy: Cluster
    nodePorts:
      mysql: ''
  postgres:
    type: ClusterIP
    externalTrafficPolicy: Cluster
    nodePorts:
      postgres: ''
  redis:
    type: ClusterIP
    externalTrafficPolicy: Cluster
    nodePorts:
      redis: ''

ingress:
  enabled: false
  tls: false
  certificate: ''
  issuer:
    name: letsencrypt-staging
  hosts:
    nginx:
      - name: ''
        path: /
    kibana:
      - name: ''
        path: /
    mongo_express:
      - name: ''
        path: /
    phpmyadmin:
      - name: ''
        path: /
    pgadmin:
      - name: ''
        path: /
    phpredisadmin:
      - name: ''
        path: /

persistence:
  accessMode: ReadWriteOnce
  enabled: false
  existingClaim: ''
  size: 1Gi
  storageClass: ''
  backup:
    awsAccessKey: ''
    awsSecretKey: ''
    azureAccountKey: ''
    azureAccountName: ''
    bucket: ''
    container: ''
    enabled: false
    endpoint: s3.amazonaws.com
    googleProjectId: ''
    googleServiceKey: ''
    keepLast: 5
    prefix: ''
    resticPassword: pass
    restore: false
    restoreNamespace: ''
    restoreRepository: ''
    restoreSnapshot: ''
    schedule: '@every 1m'
    type: s3

probes:
  liveness:
    initialDelaySeconds: 120
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 6
    successThreshold: 1
  readiness:
    initialDelaySeconds: 30
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 6
    successThreshold: 1
