categories:
  - CI/CD
questions:

# Container Images
  - variable: defaultImage
    default: true
    description: 'use default docker image'
    label: 'use default image'
    type: boolean
    show_subquestion_if: false
    group: 'Container Images'
    subquestions:
      - variable: images.server.repository
        default: docker.io/drone/drone
        description: 'drone server image name'
        type: string
        label: Drone Server Image Name
      - variable: images.server.tag
        default: 0.8.5
        description: 'drone server image tag'
        type: string
        label: Drone Server Image Tag
      - variable: images.agent.repository
        default: docker.io/drone/agent
        description: 'drone agent image name'
        type: string
        label: 'drone agent image name'
      - variable: images.agent.tag
        default: 0.8.5
        description: 'drone agent image tag'
        type: string
        label: 'drone agent image tag'
      - variable: images.dind.repository
        default: docker.io/library/docker
        description: 'drone dind image name'
        type: string
        label: 'drone dind image name'
      - variable: images.dind.tag
        default: 17.12.0-ce-dind
        description: 'drone dind image tag'
        type: string
        label: 'drone dind image tag'

# Drone Settings
  - variable: persistence.enabled
    default: false
    description: 'enable persistent volume for drone application'
    type: boolean
    required: true
    label: 'drone persistent volume enabled'
    show_subquestion_if: true
    group: 'Drone Settings'
    subquestions:
      - variable: persistence.size
        default: 10Gi
        description: 'Drone Persistent Volume Size'
        type: string
        label: Drone Volume Size
      - variable: persistence.storageClass
        default: ''
        description: 'If undefined or null, uses the default StorageClass. Default to null'
        type: storageclass
        label: Default StorageClass for Drone
  - variable: config.provider
    default: github
    description: provider
    type: string
    required: true
    label: provider
    group: 'Drone Settings'
    options:
      - github
      - gitlab
      - gitea
      - gogs
      - bitbucket-cloud
  - variable: config.open
    default: true
    description: open
    type: boolean
    required: true
    label: open
    group: 'Drone Settings'
  - variable: config.client
    default: ''
    description: client
    type: string
    required: true
    label: client
    show_if: config.provider!=gogs&&config.provider!=gitea
    group: 'Drone Settings'
  - variable: config.secret
    default: ''
    description: secret
    type: password
    required: true
    label: secret
    show_if: config.provider!=gogs&&config.provider!=gitea
    group: 'Drone Settings'
  - variable: config.username
    default: ''
    description: username
    type: string
    required: true
    label: username
    group: 'Drone Settings'
  - variable: config.providerUrl
    default: ''
    description: 'provider url'
    type: string
    show_if: config.provider!=gitlab&&config.provider!=bitbucket-cloud
    required: true
    label: 'provider url'
    group: 'Drone Settings'

# Services and Load Balancing
  - variable: ingress.enabled
    default: false
    description: 'expose app using layer 7 load balancer - ingress'
    type: boolean
    label: 'expose app using layer 7 load balancer'
    show_subquestion_if: true
    group: 'Services and Load Balancing'
    subquestions:
      - variable: ingress.hosts[0]
        default: 'xip.io'
        description: 'hostname to your drone application'
        type: hostname
        required: true
        label: Hostname
  - variable: service.type
    default: NodePort
    description: 'drone service type'
    type: enum
    show_if: 'ingress.enabled=false'
    options:
      - ClusterIP
      - NodePort
    required: true
    label: 'drone service type'
    show_subquestion_if: NodePort
    group: 'Services and Load Balancing'
    subquestions:
      - variable: service.nodePort
        default: ''
        description: 'nodeport http port(to set explicitly, choose port between 30000-32767)'
        type: int
        min: 30000
        max: 32767
        show_if: 'ingress.enabled=false&&service.type=NodePort'
        label: 'nodeport http port'
