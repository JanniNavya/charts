apiVersion: kubedb.com/v1alpha1
kind: Postgres
metadata:
  name: {{ template "postgres.fullname" . }}-postgres
  labels:
    app: {{ template "postgres.name" . }}-postgres
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  version: {{ .Values.config.version | quote }}
  configSource:
    configMap:
      name: {{ template "postgres.fullname" . }}-postgres
  storageType: Durable
  standbyMode: {{ .Values.config.standbyMode | quote }}
  {{- if .Values.config.prometheus }}
  monitor:
    agent: prometheus.io/builtin
  {{- end }}
  storage:
    {{- if .Values.persistence.enabled }}
    {{- if .Values.persistence.storageClass }}
    {{- if (eq "-" .Values.persistence.storageClass) }}
    storageClassName: ''
    {{- else }}
    storageClassName: {{ .Values.persistence.storageClass }}
    {{- end }}
    {{- end }}
    {{- end }}
    accessModes:
      - {{ .Values.persistence.accessMode }}
    resources:
      requests:
        storage: {{ .Values.persistence.size }}
  {{- if (not (empty .Values.config.backup)) }}
  backupSchedule:
    cronExpression: {{ .Values.config.backupCron | quote }}
    storageSecretName: {{ template "postgres.fullname" . }}-postgres
    {{ .Values.config.backup }}:
      {{- if (or (eq "gcs" .Values.config.backup) (eq "s3" .Values.config.backup)) }}
      bucket: {{ .Values.config.bucket | quote }}
      {{- end }}
      {{- if (eq "s3" .Values.config.backup) }}
      endpoint: {{ .Values.config.bucketEndpoint | quote }}
      {{- end }}
      {{- if (eq "azure" .Values.config.backup) }}
      container: {{ .Values.config.bucketContainer | quote }}
      {{- end }}
      prefix: {{ .Values.config.bucketPrefix | quote }}
  {{- end }}
  {{- if (not (empty .Values.config.restoreFromSnapshot)) }}
  init:
    snapshotSource:
      name: {{ .Values.config.restoreFromSnapshot | quote }}
      namespace: {{ .Release.Namespace }}
  {{- end }}
